plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    runtimeOnly 'io.grpc:grpc-netty-shaded:1.64.0'
    implementation 'io.grpc:grpc-protobuf:1.64.0'
    implementation 'io.grpc:grpc-stub:1.64.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    testImplementation 'org.mockito:mockito-core:4.2.0'

}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events "PASSED", "FAILED", "SKIPPED"
        exceptionFormat = 'full'
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.64.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
            generatedFilesBaseDir = "$projectDir/src/generated"


        }
    }
}
task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.example.BookServiceServer'
}

// Task to run the client
task runClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.example.BookServiceClient'
}



